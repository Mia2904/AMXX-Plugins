/* Plugin generated by AMXX-Studio */
#include <amxmodx>
#include <engine>

#define PLUGIN "ZE Sound"
#define VERSION "0.1"
#define AUTHOR "Mia2904"

new const SOUND[] = "ze_sound/rescate_ze.wav";
new const REPLACE[] = "rescate_jairo.wav";

public plugin_precache()
{
	precache_sound(SOUND);
}

public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR)
	
	new ent = -1;
	new classname[32];
	while ((ent = find_ent_by_class(ent, "ambient_generic")) > 0)
	{
		entity_get_string(ent, EV_SZ_message, classname, 31);
			
		if (equal(classname, REPLACE))
			entity_set_string(ent, EV_SZ_message, SOUND);
	}
	
	ent = -1;
	while ((ent = find_ent_by_class(ent, "env_sound")) > 0)
	{
		entity_get_string(ent, EV_SZ_message, classname, 31);
			
		if (equal(classname, REPLACE))
			entity_set_string(ent, EV_SZ_message, SOUND);
	}
}

/*
#include <amxmodx>
#include <fakemeta>
#include <hamsandwich>
#include <orpheu>
#include <orpheu_stocks>
//#include <orpheu_memory>

#define PLUGIN "ZE Call Sound"
#define VERSION "0.1"
#define AUTHOR "Chistowall"

#define is_player(%0) (1 <= %0 <= 32)

new const SOUND[] = "ze_sound/rescate_ze.wav";
new const REPLACE[] = "rescate_jairo";
//new g_emited;
new g_precached

public plugin_precache()
{
	g_precached = precache_sound(SOUND);
	
	OrpheuRegisterHook(OrpheuGetEngineFunction("pfnPrecacheSound" , "PrecacheSound"), "pf_precache_sound", OrpheuHookPre);
}

public OrpheuHookReturn:pf_precache_sound(sample[])
{
	if (containi(sample, REPLACE) != -1)
	{
		OrpheuSetReturn(g_precached);
		return OrpheuSupercede;
	}
	
	return OrpheuIgnored;
}

public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR);
	
	//register_event("HLTV", "event_RoundStart", "a", "1=0", "2=0");
	//register_forward(FM_EmitSound, "fw_EmitSound", 0);
	//register_forward(FM_EmitAmbientSound, "fw_EmitAmbientSound", 0);
	
	OrpheuRegisterHook(OrpheuGetEngineFunction("pfnEmitSound","EmitSound"), "fw_EmitSound");
	OrpheuRegisterHook(OrpheuGetEngineFunction("pfnEmitAmbientSound","EmitAmbientSound"), "fw_EmitAmbientSound");
}

//public event_RoundStart()
//{
//	g_emited = 0;
//}

public OrpheuHookReturn:fw_EmitAmbientSound(id, Float:pos[3], const sample[], Float:volume, Float:attn, flags, pitch)
{
	if (containi(sample, REPLACE) != -1)
	{
		OrpheuSetParam(3, SOUND)
		//engfunc(EngFunc_EmitAmbientSound, id, pos, SOUND, VOL_NORM, ATTN_NORM, 0, PITCH_NORM);
		
		//if (g_emited)
		//	return OrpheuSupercede;
		
		//g_emited = 1;
		//color_print(0, "^x04[ZE]^x01 El equipo de rescate^x03 PeruGaming^x01 viene en camino!");
		
		return OrpheuIgnored;
	}
	
	return OrpheuIgnored;
}

public OrpheuHookReturn:fw_EmitSound(id, channel, const sample[], Float:volume, Float:attn, flags, pitch)
{
	if (containi(sample, REPLACE) != -1)
	{
		OrpheuSetParam(3, SOUND)
		//engfunc(EngFunc_EmitSound, id, channel, SOUND, VOL_NORM, ATTN_NORM, 0, PITCH_NORM);
		
		//if (g_emited)
		//	return OrpheuSupercede;
		
		//g_emited = 1;
		//color_print(0, "^x04[ZE]^x01 El equipo de rescate^x03 ChistowallGames^x01 viene en camino!");
		
		return OrpheuIgnored;
	}
	
	return OrpheuIgnored;
}

stock color_print(id, msg[], any:...)
{
	static mes[191];
	static msgSayText;
	
	if (!msgSayText)
		msgSayText = get_user_msgid("SayText");
	
	vformat(mes, 190, msg, 3);
	message_begin(id ? MSG_ONE_UNRELIABLE : MSG_BROADCAST, msgSayText, _, id);
	write_byte(id ? id : 33);
	write_string(mes);
	message_end();
}
*/
