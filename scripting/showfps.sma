/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <engine>

#define PLUGIN "Mostrar FPS"
#define VERSION "0.1"
#define AUTHOR "Mia2904"

#pragma semicolon 1

new g_pfps[32 char], g_fps, g_show, cvar_ticrate;

public plugin_init()
{
	register_plugin(PLUGIN, VERSION, AUTHOR);
	
	register_clcmd("say /showfps", "clcmd_toggle_fps");
	
	cvar_ticrate = get_cvar_pointer("sys_ticrate");
	
	set_task(1.0, "reset_show_fps", _, _, _, "b");
}

public clcmd_toggle_fps(id)
{
	id--;
	
	if (g_show & (1 << id))
		g_show &= ~(1 << id);
	else
	{
		client_print(id, print_chat, "Mostrando FPS. Sys_ticrate actual: %d", get_pcvar_num(cvar_ticrate));
		g_show |= (1 << id);
	}
	
	return PLUGIN_HANDLED;
}
	
public client_disconnect(id)
	g_show &= ~(1 << id-1);

public reset_show_fps()
{
	static Float:frametime, dfps;
	frametime = get_global_float(GL_frametime);
	dfps = floatround(1 / frametime);
	
	for (new i = 0; i < 32; i++)
	{
		if (g_show & (1 << i))
		{
			set_hudmessage(255, 255, 255, 0.01, 0.89, 0, 0.1, 1.1, 0.1, 0.1);
			show_hudmessage(i+1, "FPS de Usuario: %d^nFPS Estimados: %d^nFPS Obtenidos: %d", g_pfps{i}, dfps, g_fps);
			g_pfps{i} = 0;
		}
	}
	
	g_fps = 0;
}

public client_PostThink(id)
{
	id--;
	
	if (g_show & ~(1 << id))
		return;
	
	g_pfps{id}++;
}

public server_frame()
	g_fps++;